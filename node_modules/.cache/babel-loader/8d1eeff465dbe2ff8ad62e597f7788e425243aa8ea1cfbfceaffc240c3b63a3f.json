{"ast":null,"code":"import { combineReducers } from 'redux';\nconst initialState = {\n  users: [],\n  loading: false,\n  error: null\n};\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.users;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'FETCH_USERS_SUCCESS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\nconst loadingReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.loading;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'FETCH_USERS_REQUEST':\n      return true;\n    case 'FETCH_USERS_SUCCESS':\n    case 'FETCH_USERS_FAILURE':\n      return false;\n    default:\n      return state;\n  }\n};\nconst errorReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.error;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'FETCH_USERS_FAILURE':\n      return action.payload;\n    case 'FETCH_USERS_REQUEST':\n    case 'FETCH_USERS_SUCCESS':\n      return null;\n    default:\n      return state;\n  }\n};\nconst rootReducer = combineReducers({\n  users: usersReducer,\n  loading: loadingReducer,\n  error: errorReducer\n});\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","initialState","users","loading","error","usersReducer","state","arguments","length","undefined","action","type","payload","loadingReducer","errorReducer","rootReducer"],"sources":["/workspaces/usermanagement/src/store.js"],"sourcesContent":["import { combineReducers } from 'redux';\n\nconst initialState = {\n  users: [],\n  loading: false,\n  error: null,\n};\n\nconst usersReducer = (state = initialState.users, action) => {\n  switch (action.type) {\n    case 'FETCH_USERS_SUCCESS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst loadingReducer = (state = initialState.loading, action) => {\n  switch (action.type) {\n    case 'FETCH_USERS_REQUEST':\n      return true;\n    case 'FETCH_USERS_SUCCESS':\n    case 'FETCH_USERS_FAILURE':\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst errorReducer = (state = initialState.error, action) => {\n  switch (action.type) {\n    case 'FETCH_USERS_FAILURE':\n      return action.payload;\n    case 'FETCH_USERS_REQUEST':\n    case 'FETCH_USERS_SUCCESS':\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  users: usersReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n\nexport default rootReducer;\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AAEvC,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAAwC;EAAA,IAAvCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY,CAACC,KAAK;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,qBAAqB;MACxB,OAAOD,MAAM,CAACE,OAAO;IACvB;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;AAED,MAAMO,cAAc,GAAG,SAAAA,CAAA,EAA0C;EAAA,IAAzCP,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY,CAACE,OAAO;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1D,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,qBAAqB;MACxB,OAAO,IAAI;IACb,KAAK,qBAAqB;IAC1B,KAAK,qBAAqB;MACxB,OAAO,KAAK;IACd;MACE,OAAOL,KAAK;EAAC;AAEnB,CAAC;AAED,MAAMQ,YAAY,GAAG,SAAAA,CAAA,EAAwC;EAAA,IAAvCR,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY,CAACG,KAAK;EAAA,IAAEM,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,qBAAqB;MACxB,OAAOD,MAAM,CAACE,OAAO;IACvB,KAAK,qBAAqB;IAC1B,KAAK,qBAAqB;MACxB,OAAO,IAAI;IACb;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;AAED,MAAMS,WAAW,GAAGf,eAAe,CAAC;EAClCE,KAAK,EAAEG,YAAY;EACnBF,OAAO,EAAEU,cAAc;EACvBT,KAAK,EAAEU;AACT,CAAC,CAAC;AAEF,eAAeC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
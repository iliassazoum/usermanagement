{"ast":null,"code":"var _jsxFileName = \"/workspaces/usermanagement/src/UserForm.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = () => {\n  const initialValues = {\n    name: '',\n    email: ''\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Required'),\n    email: Yup.string().email('Invalid email address').required('Required')\n  });\n  const onSubmit = async (values, _ref) => {\n    let {\n      resetForm\n    } = _ref;\n    try {\n      const response = await axios.post('http://localhost:8080/user/add', values);\n      console.log(response.data);\n      resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: _ref2 => {\n      let {\n        errors,\n        touched\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","axios","jsxDEV","_jsxDEV","UserForm","initialValues","name","email","validationSchema","object","string","required","onSubmit","values","_ref","resetForm","response","post","console","log","data","error","children","_ref2","errors","touched","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/workspaces/usermanagement/src/UserForm.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nconst UserForm = () => {\n  const initialValues = { name: '', email: '' };\n  \n  const validationSchema = Yup.object({\n    name: Yup.string().required('Required'),\n    email: Yup.string().email('Invalid email address').required('Required'),\n  });\n  \n  const onSubmit = async (values, { resetForm }) => {\n    try {\n      const response = await axios.post('http://localhost:8080/user/add', values);\n      console.log(response.data);\n      resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  \n  return (\n    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n      {({ errors, touched }) => (\n        <Form>\n          <div>\n            <label htmlFor=\"name\">Name</label>\n            <Field type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" />\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <Field type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" />\n          </div>\n          <button type=\"submit\">Submit</button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UserForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}